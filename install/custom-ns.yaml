---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: kemts.kubernetes-misc.xyz
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: kubernetes-misc.xyz
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: kemts
    # singular name to be used as an alias on the CLI and for display
    singular: kemts
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: Kemt
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
      - kemt
  #  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      properties:
        spec:
          type: object
          properties:
            webhook:
              type: string
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kemt-svc-acc
  namespace: cluster-infra # The svc acc should be in the same ns as the pod mounting it
automountServiceAccountToken: true
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kemt-clusterrole
rules:
  - apiGroups: ["", "extensions", "kubernetes-misc.xyz", "apps"]
    resources: ["events", "kemts"]
    verbs: ["get", "list", "watch" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kemt-clusterrole-binding
  namespace: cluster-infra # The service account mounted by the pod should live it the same ns as the pod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kemt-clusterrole
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: kemt-svc-acc
    namespace: cluster-infra #Try 2

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kemt-clusterrole-read-all
rules:
  - apiGroups: ["", "extensions"]
    resources: ["deployments", "pods", "pods/log", "services", "logs", "namespaces"]
    verbs: ["get", "list", "watch" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kemt-clusterrole-binding-read-all
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kemt-clusterrole-read-all
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: kemt-svc-acc
    namespace: cluster-infra